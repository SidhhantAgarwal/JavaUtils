

import sys
import json
import csv
from xlsxwriter import *

##
# This function converts an item like 
# {
#   "item_1":"value_11",
#   "item_2":"value_12",
#   "item_3":"value_13",
#   "item_4":["sub_value_14", "sub_value_15"],
#   "item_5":{
#       "sub_item_1":"sub_item_value_11",
#       "sub_item_2":["sub_item_value_12", "sub_item_value_13"]
#   }
# }
# To
# {
#   "node_item_1":"value_11",
#   "node_item_2":"value_12",
#   "node_item_3":"value_13",
#   "node_item_4_0":"sub_value_14", 
#   "node_item_4_1":"sub_value_15",
#   "node_item_5_sub_item_1":"sub_item_value_11",
#   "node_item_5_sub_item_2_0":"sub_item_value_12",
#   "node_item_5_sub_item_2_0":"sub_item_value_13"
# }
##
def reduce_item(key, value):
    
    global reduced_item
    
    #Reduction Condition 1
    if type(value) is list:
        i=0
        for sub_item in value:
            
            reduce_item(key+'_'+str(i), sub_item)
            i=i+1

    #Reduction Condition 2
    elif type(value) is dict:
        
        sub_keys = value.keys()
        
        for sub_key in sub_keys:
            
            reduce_item(key+'_'+ str(sub_key), value[sub_key])
    
    #Base Condition
    else:
        keyValue = str(key)
        keyValue = keyValue.replace("results" , "")
        keyValue = keyValue.replace("result" , "")
        keyValue = keyValue.replace("_" ," ")
        keyValue = keyValue.strip()
        
        reduced_item[str(keyValue)] = str(value)
    
    return
        
     
def manipulateExcel(filePath):
    excelPath = filePath.split(".")[0] + '.xlsx'
    workbook = Workbook(excelPath)
    worksheet = workbook.add_worksheet()
    
    format = workbook.add_format()
    
    format.set_font_color('red')
    with open(filePath, 'rb') as f:
        reader = csv.reader(f)
        for r, row in enumerate(reader):
            for c, col in enumerate(row):
                if (c== 5 or c==6 or c== 7 or c==8 or c==9 or c==10 or c==11 or c==12 or c==13 or c==14 or c==15 or c==16 or c==23 or c==32 or c==33 or c==34):
                    worksheet.write(r, c, col, format)
                
                else :
                    worksheet.write(r, c, col)
                
    
    return

if __name__ == "__main__":
    if len(sys.argv) != 4:
        print "\nUsage: python json_to_csv.py <node_name> <json_in_file_path> <csv_out_file_path>\n"
    else:
        #Reading arguments
        node = sys.argv[1]
        json_file_path = sys.argv[2]
        csv_file_path = sys.argv[3]

        fp = open(json_file_path, 'r')
        json_value = fp.read()
        raw_data = json.loads(json_value)
        

        processed_data = []
        header = []
        for item in raw_data[node]:
            reduced_item = {}
            reduce_item(node, item)
            header += reduced_item.keys()
            processed_data.append(reduced_item)

        header = list(set(header))
        header.sort()
        
        checkIndex = header.index('customerId')
        for i in range(checkIndex , 0, -1):
            header[i]= header[i-1]
            
        header[0]= 'customerId'
        checkIndex = header.index('txnId')
        for i in range(checkIndex , 0 , -1):
            header[i] = header[i-1]
            
        header[0] = 'txnId'
        
        

            

        with open(csv_file_path, 'wb+') as f:
            writer = csv.DictWriter(f, header, quoting=csv.QUOTE_ALL)
            writer.writeheader()
           
            for row in processed_data:
                writer.writerow(row)

        print "Just completed writing csv file with %d columns" % len(header)
        manipulateExcel(csv_file_path)
        
